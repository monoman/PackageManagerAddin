//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.VisualStudio.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class VsResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VsResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.VisualStudio.Resources.VsResources", typeof(VsResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating package at {0}....
        /// </summary>
        public static string Cmdlet_CreatingPackage {
            get {
                return ResourceManager.GetString("Cmdlet_CreatingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing script file {0}..
        /// </summary>
        public static string Cmdlet_ExecutingScript {
            get {
                return ResourceManager.GetString("Cmdlet_ExecutingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Project parameter or invalid project name..
        /// </summary>
        public static string Cmdlet_MissingProjectParameter {
            get {
                return ResourceManager.GetString("Cmdlet_MissingProjectParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current environment doesn&apos;t have a solution open..
        /// </summary>
        public static string Cmdlet_NoSolution {
            get {
                return ResourceManager.GetString("Cmdlet_NoSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate a .nuspec file in the specified project..
        /// </summary>
        public static string Cmdlet_NuspecFileNotFound {
            get {
                return ResourceManager.GetString("Cmdlet_NuspecFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package file successfully created....
        /// </summary>
        public static string Cmdlet_PackageCreated {
            get {
                return ResourceManager.GetString("Cmdlet_PackageCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package &apos;{0}&apos; only applies to the solution and not to a project. Remove the -Project parameter..
        /// </summary>
        public static string Cmdlet_PackageForSolutionOnly {
            get {
                return ResourceManager.GetString("Cmdlet_PackageForSolutionOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project &apos;{0}&apos; is not found..
        /// </summary>
        public static string Cmdlet_ProjectNotFound {
            get {
                return ResourceManager.GetString("Cmdlet_ProjectNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one .nuspec files were found..
        /// </summary>
        public static string Cmdlet_TooManySpecFiles {
            get {
                return ResourceManager.GetString("Cmdlet_TooManySpecFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages. Some packages may include dependencies which are governed by additional licenses. Follow the package source (feed) URL to determine any dependencies..
        /// </summary>
        public static string Console_DisclaimerText {
            get {
                return ResourceManager.GetString("Console_DisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added file &apos;{0}&apos; to project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_AddedFileToProject {
            get {
                return ResourceManager.GetString("Debug_AddedFileToProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added reference &apos;{0}&apos; to project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_AddReference {
            get {
                return ResourceManager.GetString("Debug_AddReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed file &apos;{0}&apos;.
        /// </summary>
        public static string Debug_RemovedFile {
            get {
                return ResourceManager.GetString("Debug_RemovedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed file &apos;{0}&apos; from folder &apos;{1}&apos;.
        /// </summary>
        public static string Debug_RemovedFileFromFolder {
            get {
                return ResourceManager.GetString("Debug_RemovedFileFromFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed folder &apos;{0}&apos;.
        /// </summary>
        public static string Debug_RemovedFolder {
            get {
                return ResourceManager.GetString("Debug_RemovedFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed reference &apos;{0}&apos; from project &apos;{1}&apos;.
        /// </summary>
        public static string Debug_RemoveReference {
            get {
                return ResourceManager.GetString("Debug_RemoveReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each package is licensed to you by its owner. NuGet is not responsible for, nor does it grant any licenses to, third-party packages..
        /// </summary>
        public static string Dialog_DisclaimerText {
            get {
                return ResourceManager.GetString("Dialog_DisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project is invalid.
        /// </summary>
        public static string DTE_InvalidProject {
            get {
                return ResourceManager.GetString("DTE_InvalidProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project &apos;{0}&apos; is unsupported.
        /// </summary>
        public static string DTE_ProjectUnsupported {
            get {
                return ResourceManager.GetString("DTE_ProjectUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are downloading {0} from {1}, the license agreement to which is available at {2}. Check the package for additional dependencies, which may come with their own license agreement(s). Your use of the package and dependencies constitutes your acceptance of their license agreements. If you do not accept the license agreement(s), then delete the relevant components from your device..
        /// </summary>
        public static string InstallSuccessDisclaimerText {
            get {
                return ResourceManager.GetString("InstallSuccessDisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve package list because no source was specified..
        /// </summary>
        public static string NoActivePackageSource {
            get {
                return ResourceManager.GetString("NoActivePackageSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be removed because it in use by &apos;{1}&apos;.
        /// </summary>
        public static string PackageCannotBeRemovedBecauseItIsInUse {
            get {
                return ResourceManager.GetString("PackageCannotBeRemovedBecauseItIsInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package source does not belong to the collection of available sources..
        /// </summary>
        public static string PackageSource_Invalid {
            get {
                return ResourceManager.GetString("PackageSource_Invalid", resourceCulture);
            }
        }
    }
}
