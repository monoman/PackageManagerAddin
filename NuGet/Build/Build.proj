<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Go" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
       <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
        <NuPackRoot>$(MSBuildProjectDirectory)\..</NuPackRoot>
        <DropDirectory>$(NuPackRoot)\bin</DropDirectory>
        <ArtifactDropDirectory>$(DropDirectory)\artifacts</ArtifactDropDirectory>
        <NuPackDropDirectory>$(DropDirectory)\NuPack</NuPackDropDirectory>
        <ExeBuildDirectory>$(NuPackRoot)\NuPack\bin\$(Configuration)</ExeBuildDirectory>
        <ExeDropDirectory>$(NuPackDropDirectory)\Console</ExeDropDirectory>
        <VisualStudioAddInBuildDirectory>$(NuPackRoot)\NuPack.Tools\bin\$(Configuration)</VisualStudioAddInBuildDirectory>
        <VisualStudioAddInDropDirectory>$(NuPackDropDirectory)\VisualStudioAddIn</VisualStudioAddInDropDirectory>
        <ServerBuildDirectory>$(NuPackRoot)\NuPack.Server</ServerBuildDirectory>
        <ServerDropDirectory>$(NuPackDropDirectory)\Server</ServerDropDirectory>
        <ZipExe>$(NuPackRoot)\Tools\7zip4.65\7z.exe</ZipExe>
        <ILMergeExe>$(NuPackRoot)\Tools\ILMerge\ILMerge.exe</ILMergeExe>
        <ILMergeArtifactDirectory>$(ArtifactDropDirectory)\ILMerge</ILMergeArtifactDirectory>
        <ILMergeFileFinalName>NuGet.exe</ILMergeFileFinalName>
        <ILMergeInternalizeIgnoreFile>$(NuPackRoot)\Build\ilmerge.internalize.ignore.txt</ILMergeInternalizeIgnoreFile>
        <MergeDirectory>$(ExeDropDirectory)</MergeDirectory>
        <MSBuildBuildDirectory>$(NuPackRoot)\NuPack.MSBuild\bin\$(Configuration)</MSBuildBuildDirectory>
        <MSBuildDropDirectory>$(NuPackDropDirectory)\MSBuild</MSBuildDropDirectory>
        <MSBuildILMergeFileFinalName>NuGet.MSBuild.dll</MSBuildILMergeFileFinalName>
    </PropertyGroup>

    <Target Name="Go" DependsOnTargets="Build; RunTests; BuildPackages; CreateDropDirectories; CopyExecutableOutputToDropDirectory; CopyVisualStudioAddInOutputToDropDirectory; CopyServerOutputToDropDirectory; CopyMSBuildOutputToDropDirectory; CopyLicenseToAllDirectories; ILMergeTheExecutable; ILMergeMSBuild; RunIntegrationTests">
    </Target>

    <Target Name="Build">
        <MSBuild Projects="$(NuPackRoot)\NuPack.sln" Targets="Build" Properties="EnableCodeAnalysis=true" />
    </Target>

    <Target Name="RunTests">
        <MSBuild Projects="$(NuPackRoot)\NuPack.Dialog.Test\NuPack.Dialog.Test.csproj" Targets="RunTests" />
        <MSBuild Projects="$(NuPackRoot)\NuPack.Test\NuPack.Test.csproj" Targets="RunTests" />
        <MSBuild Projects="$(NuPackRoot)\NuPack.VisualStudio.Test\NuPack.VisualStudio.Test.csproj" Targets="RunTests" />
        <MSBuild Projects="$(NuPackRoot)\NuPack.MSBuild.Test\NuPack.MSBuild.Test.csproj" Targets="RunTests" />
    </Target>

    <Target Name="BuildPackages">
        <MSBuild Projects="$(NuPackRoot)\Build\PackageBuild.proj" Targets="BuildPackages" />
    </Target>

    <Target Name="CreateDropDirectories">
        <Message Text="Making the output directories for the compiled output at '$(DropDirectory)'." />
        <RemoveDir Directories="$(DropDirectory)" Condition="Exists('$(DropDirectory)')" ContinueOnError="True" />
        <MakeDir Directories="$(DropDirectory)" Condition="!Exists('$(DropDirectory)')" />
        <MakeDir Directories="$(ArtifactDropDirectory)" Condition="!Exists('$(ArtifactDropDirectory)')" />
        <MakeDir Directories="$(NuPackDropDirectory)" Condition="!Exists('$(NuPackDropDirectory)')" />
        <MakeDir Directories="$(ExeDropDirectory)" Condition="!Exists('$(ExeDropDirectory)')" />
        <MakeDir Directories="$(VisualStudioAddInDropDirectory)" Condition="!Exists('$(VisualStudioAddInDropDirectory)')" />
        <MakeDir Directories="$(ServerDropDirectory)" Condition="!Exists('$(ServerDropDirectory)')" />
        <MakeDir Directories="$(MSBuildDropDirectory)" Condition="!Exists('$(MSBuildDropDirectory)')" />
    </Target>

    <Target Name="CopyExecutableOutputToDropDirectory">
        <ItemGroup>
            <ExeOutputItems Exclude="$(ExeBuildDirectory)\**\*.pdb" Include="$(ExeBuildDirectory)\**\*.*" />
        </ItemGroup>
        <Message Text="Copying the NuGet Console output to $(ExeDropDirectory)" />
        <Copy ContinueOnError="false" SourceFiles="@(ExeOutputItems)" DestinationFiles="@(ExeOutputItems ->'$(ExeDropDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" />
    </Target>

    <Target Name="CopyVisualStudioAddInOutputToDropDirectory">
        <ItemGroup>
            <VisualStudioAddInOutputItems Include="$(VisualStudioAddInBuildDirectory)\**\*.vsix" />
        </ItemGroup>
        <Message Text="Copying the NuGet Visual Studio Add-In output to $(VisualStudioAddInDropDirectory)" />
        <Copy ContinueOnError="false" SourceFiles="@(VisualStudioAddInOutputItems)" DestinationFiles="@(VisualStudioAddInOutputItems ->'$(VisualStudioAddInDropDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" />
    </Target>
    
    <Target Name="CopyServerOutputToDropDirectory">
        <ItemGroup>
            <ServerOutputItems Include="$(ServerBuildDirectory)\**\*.*" Exclude="$(ServerBuildDirectory)\**\*.cs*;$(ServerBuildDirectory)\obj\**\*.*;$(ServerBuildDirectory)\Packages\**\*.*"/>
        </ItemGroup>
        <Message Text="Copying the NuGet Server output to $(ServerDropDirectory)" />
        <Copy ContinueOnError="false" SourceFiles="@(ServerOutputItems)" DestinationFiles="@(ServerOutputItems ->'$(ServerDropDirectory)\www\%(RecursiveDir)%(Filename)%(Extension)')" />
        <Exec Command="$(ZipExe) a ..\server.zip" WorkingDirectory="$(ServerDropDirectory)\www" />
    </Target>

    <Target Name="CopyMSBuildOutputToDropDirectory">
      <ItemGroup>
        <MSBuildOutputItems Exclude="$(MSBuildBuildDirectory)\**\*.pdb" Include="$(MSBuildBuildDirectory)\**\*.*" />
      </ItemGroup>
      <Message Text="Copying NuGet.MSBuild.dll output to $(MSBuildDropDirectory)" />
      <Copy ContinueOnError="false" SourceFiles="@(MSBuildOutputItems)" DestinationFiles="@(MSBuildOutputItems ->'$(MSBuildDropDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" />
    </Target>
    
    <Target Name="CopyLicenseToAllDirectories">
        <ItemGroup>
            <LicenseFileItems Include="$(MSBuildProjectDirectory)\..\LICENSE.txt" />
        </ItemGroup>
        <Message Text="Copying the License to all drop directories" />
        <Copy ContinueOnError="false" SourceFiles="@(LicenseFileItems)" DestinationFiles="@(LicenseFileItems -&gt;'$(ExeDropDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy ContinueOnError="false" SourceFiles="@(LicenseFileItems)" DestinationFiles="@(LicenseFileItems -&gt;'$(VisualStudioAddInDropDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy ContinueOnError="false" SourceFiles="@(LicenseFileItems)" DestinationFiles="@(LicenseFileItems -&gt;'$(ServerDropDirectory)\%(RecursiveDir)%(Filename)%(Extension)')" />
    </Target>
    <Target Name="ILMergeTheExecutable">
        <Message Text="ILMerging the executable contents in $(ExeDropDirectory)" />
        <ItemGroup>
            <ILMergeItems Include="$(MergeDirectory)\*.dll" />
        </ItemGroup>
        <MakeDir Directories="$(ILMergeArtifactDirectory)" Condition="!Exists('$(ILMergeArtifactDirectory)')" />
        <!-- ILMerge does not yet support .NET 4.0  http://nitoprograms.blogspot.com/2010/09/using-ilmerge-with-net-40-andor-rx.html /targetplatform:v4,"%ProgramFiles%\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0" -->
        <Exec Command="$(ILMergeExe) /targetplatform:&quot;v4, %ProgramFiles%\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0&quot; /internalize:$(ILMergeInternalizeIgnoreFile) /target:exe /out:$(ILMergeFileFinalName) /log:$(ILMergeArtifactDirectory)\ilmerge.log /ndebug /allowDup $(ILMergeFileFinalName) %(ILMergeItems.FileName)%(ILMergeItems.Extension)" WorkingDirectory="$(MergeDirectory)" />
        <!-- For some reason ILMerge is not deleting files that are merged in - but they are merging in just fine -->
        <Delete Files="@(ILMergeItems)" />
    </Target>
  
    <Target Name="ILMergeMSBuild">
      <ItemGroup>
        <MSBuildILMergeItems Include="$(MSBuildDropDirectory)\NuGet.Core.dll" />
      </ItemGroup>
      <MakeDir Directories="$(ILMergeArtifactDirectory)" Condition="!Exists('$(ILMergeArtifactDirectory)')" />
      <!-- ILMerge does not yet support .NET 4.0  http://nitoprograms.blogspot.com/2010/09/using-ilmerge-with-net-40-andor-rx.html /targetplatform:v4,"%ProgramFiles%\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0" -->
      <Exec Command="$(ILMergeExe) /targetplatform:&quot;v4, %ProgramFiles%\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0&quot; /internalize:$(ILMergeInternalizeIgnoreFile) /target:dll /out:$(MSBuildILMergeFileFinalName) /log:$(ILMergeArtifactDirectory)\ilmerge.msbuild.log /ndebug /allowDup $(MSBuildILMergeFileFinalName) %(MSBuildILMergeItems.FileName)%(MSBuildILMergeItems.Extension)" WorkingDirectory="$(MSBuildDropDirectory)" />
      <!-- For some reason ILMerge is not deleting files that are merged in - but they are merging in just fine -->
      <Delete Files="@(MSBuildILMergeItems)" />
    </Target>
    
    <Target Name="RunIntegrationTests">
        <MSBuild Projects="$(NuPackRoot)\NuPack.Test.Integration\NuPack.Test.Integration.csproj" Targets="RunIntegrationTests" />
    </Target>
</Project>