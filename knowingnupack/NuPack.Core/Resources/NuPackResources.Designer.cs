//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuPack.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NuPackResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NuPackResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuPack.Resources.NuPackResources", typeof(NuPackResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read feed contents. Verify that the feed conforms to the Atom Syndication format..
        /// </summary>
        internal static string AtomFeedPackageRepo_InvalidFeedContent {
            get {
                return ResourceManager.GetString("AtomFeedPackageRepo_InvalidFeedContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read feed. Verify that a feed is hosted at the remote server and is available..
        /// </summary>
        internal static string AtomFeedPackageRepo_InvalidFeedSource {
            get {
                return ResourceManager.GetString("AtomFeedPackageRepo_InvalidFeedSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular dependency detected &apos;{0}&apos;.
        /// </summary>
        internal static string CircularDependencyDetected {
            get {
                return ResourceManager.GetString("CircularDependencyDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflict occurred. &apos;{0}&apos; referenced but requested &apos;{1}&apos;. &apos;{2}&apos; depends on &apos;{0}&apos;.
        /// </summary>
        internal static string ConflictErrorWithDependent {
            get {
                return ResourceManager.GetString("ConflictErrorWithDependent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conflict occurred. &apos;{0}&apos; referenced but requested &apos;{1}&apos;. &apos;{2}&apos; depend on &apos;{0}&apos;.
        /// </summary>
        internal static string ConflictErrorWithDependents {
            get {
                return ResourceManager.GetString("ConflictErrorWithDependents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added file &apos;{0}&apos;.
        /// </summary>
        internal static string Debug_AddedFile {
            get {
                return ResourceManager.GetString("Debug_AddedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added file &apos;{0}&apos; to folder &apos;{1}&apos;.
        /// </summary>
        internal static string Debug_AddedFileToFolder {
            get {
                return ResourceManager.GetString("Debug_AddedFileToFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependency &apos;{0}&apos; already installed.
        /// </summary>
        internal static string Debug_DependencyAlreadyInstalled {
            get {
                return ResourceManager.GetString("Debug_DependencyAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependency &apos;{0}&apos; already referenced.
        /// </summary>
        internal static string Debug_DependencyAlreadyReferenced {
            get {
                return ResourceManager.GetString("Debug_DependencyAlreadyReferenced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for updates for &apos;{0}&apos;....
        /// </summary>
        internal static string Debug_LookingForUpdates {
            get {
                return ResourceManager.GetString("Debug_LookingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing dependencies for &apos;{0}&apos;.
        /// </summary>
        internal static string Debug_ProcessingDependencies {
            get {
                return ResourceManager.GetString("Debug_ProcessingDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed file &apos;{0}&apos;.
        /// </summary>
        internal static string Debug_RemovedFile {
            get {
                return ResourceManager.GetString("Debug_RemovedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed file &apos;{0}&apos; to folder &apos;{1}&apos;.
        /// </summary>
        internal static string Debug_RemovedFileFromFolder {
            get {
                return ResourceManager.GetString("Debug_RemovedFileFromFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed folder &apos;{0}&apos;.
        /// </summary>
        internal static string Debug_RemovedFolder {
            get {
                return ResourceManager.GetString("Debug_RemovedFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to install &apos;{0}&apos;....
        /// </summary>
        internal static string Log_AttemptingToInstallPackage {
            get {
                return ResourceManager.GetString("Log_AttemptingToInstallPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; not installed. Attempting to retrieve dependency from source....
        /// </summary>
        internal static string Log_AttemptingToRetrievePackageFromSource {
            get {
                return ResourceManager.GetString("Log_AttemptingToRetrievePackageFromSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; not referenced. Retrieving dependency....
        /// </summary>
        internal static string Log_AttemptingToRetrievePackageReferenceFromSource {
            get {
                return ResourceManager.GetString("Log_AttemptingToRetrievePackageReferenceFromSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to uninstall &apos;{0}&apos;....
        /// </summary>
        internal static string Log_AttemptingToUninstall {
            get {
                return ResourceManager.GetString("Log_AttemptingToUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leaving &apos;{0}&apos; installed.
        /// </summary>
        internal static string Log_LeavingPackageInstalled {
            get {
                return ResourceManager.GetString("Log_LeavingPackageInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modified configuration file.
        /// </summary>
        internal static string Log_ModifiedConfiguration {
            get {
                return ResourceManager.GetString("Log_ModifiedConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates available for &apos;{0}&apos;.
        /// </summary>
        internal static string Log_NoUpdatesAvailable {
            get {
                return ResourceManager.GetString("Log_NoUpdatesAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already installed.
        /// </summary>
        internal static string Log_PackageAlreadyInstalled {
            get {
                return ResourceManager.GetString("Log_PackageAlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully installed &apos;{0}&apos;.
        /// </summary>
        internal static string Log_PackageInstalledSuccessfully {
            get {
                return ResourceManager.GetString("Log_PackageInstalledSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done.
        /// </summary>
        internal static string Log_PackageRetrieveSuccessfully {
            get {
                return ResourceManager.GetString("Log_PackageRetrieveSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is up to date.
        /// </summary>
        internal static string Log_PackageUpToDate {
            get {
                return ResourceManager.GetString("Log_PackageUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} already has a reference to &apos;{1}&apos;.
        /// </summary>
        internal static string Log_ProjectAlreadyReferencesPackage {
            get {
                return ResourceManager.GetString("Log_ProjectAlreadyReferencesPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added &apos;{0}&apos; to {1}.
        /// </summary>
        internal static string Log_SuccessfullyAddedPackageReference {
            get {
                return ResourceManager.GetString("Log_SuccessfullyAddedPackageReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully removed &apos;{0}&apos; from {1}.
        /// </summary>
        internal static string Log_SuccessfullyRemovedPackageReference {
            get {
                return ResourceManager.GetString("Log_SuccessfullyRemovedPackageReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully uninstalled &apos;{0}&apos;.
        /// </summary>
        internal static string Log_SuccessfullyUninstalledPackage {
            get {
                return ResourceManager.GetString("Log_SuccessfullyUninstalledPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating &apos;{0}&apos; to version &apos;{1}&apos;.
        /// </summary>
        internal static string Log_UpdatingToSpecificVersion {
            get {
                return ResourceManager.GetString("Log_UpdatingToSpecificVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is already referencing a newer version of &apos;{1}&apos;.
        /// </summary>
        internal static string NewerVersionAlreadyReferenced {
            get {
                return ResourceManager.GetString("NewerVersionAlreadyReferenced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package does not contain a manifest..
        /// </summary>
        internal static string PackageDoesNotContainManifest {
            get {
                return ResourceManager.GetString("PackageDoesNotContainManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to uninstall &apos;{0}&apos; because &apos;{1}&apos; depends on it.
        /// </summary>
        internal static string PackageHasDependent {
            get {
                return ResourceManager.GetString("PackageHasDependent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to remove reference to &apos;{0}&apos; because &apos;{1}&apos; depends on it.
        /// </summary>
        internal static string PackageHasDependentReference {
            get {
                return ResourceManager.GetString("PackageHasDependentReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to uninstall &apos;{0}&apos; because &apos;{1}&apos; depend on it.
        /// </summary>
        internal static string PackageHasDependents {
            get {
                return ResourceManager.GetString("PackageHasDependents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to remove reference to &apos;{0}&apos; because &apos;{1}&apos; depend on it.
        /// </summary>
        internal static string PackageHasMultipleDependentsReferenced {
            get {
                return ResourceManager.GetString("PackageHasMultipleDependentsReferenced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add reference to &apos;{0}&apos; because it has no project content..
        /// </summary>
        internal static string PackageHasNoProjectContent {
            get {
                return ResourceManager.GetString("PackageHasNoProjectContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package is missing required property &apos;{0}&apos;.
        /// </summary>
        internal static string PackageMissingRequiredProperty {
            get {
                return ResourceManager.GetString("PackageMissingRequiredProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; is not installed.
        /// </summary>
        internal static string PackageNotInstalled {
            get {
                return ResourceManager.GetString("PackageNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package source must be a rooted physical path.
        /// </summary>
        internal static string PackageSourceMustBePhysicalPath {
            get {
                return ResourceManager.GetString("PackageSourceMustBePhysicalPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not reference &apos;{1}&apos;..
        /// </summary>
        internal static string ProjectDoesNotHaveReference {
            get {
                return ResourceManager.GetString("ProjectDoesNotHaveReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add a assembly reference to &apos;{0}&apos;. The file does not exist.
        /// </summary>
        internal static string ReferenceDoesNotExist {
            get {
                return ResourceManager.GetString("ReferenceDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The replacement token &apos;{0}&apos; has no value..
        /// </summary>
        internal static string TokenHasNoValue {
            get {
                return ResourceManager.GetString("TokenHasNoValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find assembly references that are compatible with the target framework &apos;{0}&apos;.
        /// </summary>
        internal static string UnableToFindCompatibleReference {
            get {
                return ResourceManager.GetString("UnableToFindCompatibleReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate dependency &apos;{0}&apos;. It may have been uninstalled.
        /// </summary>
        internal static string UnableToLocateDependency {
            get {
                return ResourceManager.GetString("UnableToLocateDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve dependency &apos;{0}&apos;.
        /// </summary>
        internal static string UnableToResolveDependency {
            get {
                return ResourceManager.GetString("UnableToResolveDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find package &apos;{0}&apos;.
        /// </summary>
        internal static string UnknownPackage {
            get {
                return ResourceManager.GetString("UnknownPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already has an assembly reference to &apos;{1}&apos;.
        /// </summary>
        internal static string Warning_AssemblyAlreadyReferenced {
            get {
                return ResourceManager.GetString("Warning_AssemblyAlreadyReferenced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already exists. Skipping....
        /// </summary>
        internal static string Warning_FileAlreadyExists {
            get {
                return ResourceManager.GetString("Warning_FileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipping &apos;{0}&apos; because it was modified.
        /// </summary>
        internal static string Warning_FileModified {
            get {
                return ResourceManager.GetString("Warning_FileModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; skipped, because it is in use by &apos;{1}&apos;.
        /// </summary>
        internal static string Warning_PackageSkippedBecauseItIsInUse {
            get {
                return ResourceManager.GetString("Warning_PackageSkippedBecauseItIsInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing &apos;{0}&apos; might cause &apos;{1}&apos; to be broken.
        /// </summary>
        internal static string Warning_RemovingPackageReferenceWillBreakDependents {
            get {
                return ResourceManager.GetString("Warning_RemovingPackageReferenceWillBreakDependents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling &apos;{0}&apos; might cause &apos;{1}&apos; to be broken.
        /// </summary>
        internal static string Warning_UninstallingPackageWillBreakDependents {
            get {
                return ResourceManager.GetString("Warning_UninstallingPackageWillBreakDependents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing &apos;{0}&apos; might cause &apos;{1}&apos; to be broken.
        /// </summary>
        internal static string Warning_UninstallingPackageWillBreakDependents1 {
            get {
                return ResourceManager.GetString("Warning_UninstallingPackageWillBreakDependents1", resourceCulture);
            }
        }
    }
}
